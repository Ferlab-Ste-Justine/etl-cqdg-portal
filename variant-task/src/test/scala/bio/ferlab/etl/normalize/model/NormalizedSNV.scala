/**
 * Generated by [[bio.ferlab.datalake.spark3.utils.ClassGenerator]]
 * on 2023-06-07T10:07:03.264
 */
package bio.ferlab.etl.normalize.model

case class NormalizedSNV(`sample_id`: String = "S1",
                         `study_id`: String = "STU0000001",
                         `chromosome`: String = "1",
                         `start`: Long = 10230,
                         `end`: Long = 10232,
                         `reference`: String = "AC",
                         `alternate`: String = "A",
                         `name`: Option[String] = None,
                         `hgvsg`: Option[String] = Some("chr1:g.10234del"),
                         `variant_class`: Option[String] = Some("deletion"),
                         `ad`: Seq[Int] = Seq(4, 12),
                         `dp`: Int = 16,
                         `gq`: Int = 18,
                         `calls`: Seq[Int] = Seq(1, 1),
                         `has_alt`: Int = 1,
                         `is_multi_allelic`: Boolean = false,
                         `old_multi_allelic`: String = null,
                         `quality`: Double = 65.93,
                         `filter`: Option[String] = None,
                         `info_ac`: Int = 2,
                         `info_an`: Int = 2,
                         `info_af`: Double = 1.0,
                         `info_sor`: Double = 0.122,
                         `info_read_pos_rank_sum`: Double = 0.303,
                         `info_inbreeding_coeff`: Option[Double] = None,
                         `info_fs`: Double = 2.869,
                         `info_dp`: Int = 68,
                         `info_ds`: Option[Boolean] = None,
                         `info_base_qrank_sum`: Option[Double] = None,
                         `info_mleaf`: Double = 1.0,
                         `info_mleac`: Int = 2,
                         `info_mq`: Double = 25.07,
                         `info_qd`: Double = 4.12,
                         `info_end`: Option[Int] = None,
                         `info_somatic`: Boolean = false,
                         `info_db`: Boolean = false,
                         `info_m_qrank_sum`: Double = 1.15,
                         `info_excess_het`: Double = 0.0,
                         `info_r2_5p_bias`: Double = 0.0,
                         `info_old_multiallelic`: String = null,
                         `info_haplotype_score`: Option[Double] = None,
                         `is_normalized`: Boolean = false,
                         `zygosity`: String = "HOM",
                         `biospecimen_id`: String = "FHIR_BS_2",
                         `release_id`: String = "5",
                         `biospecimen_tissue_source`: String = "Blood (NCIT:C12434)",
                         `age_biospecimen_collection`: AGE_BIOSPECIMEN_COLLECTION = AGE_BIOSPECIMEN_COLLECTION(),
                         `submitter_biospecimen_id`: String = "BS_2",
                         `participant`: PARTICIPANT = PARTICIPANT(),
                         `mother_id`: String = "P3",
                         `father_id`: String = "P2",
                         `sample_type`: String = "DNA (NCIT:C449)",
                         `submitter_sample_id`: String = "SAMPLE2",
                         `affected_status`: Boolean = true,
                         `ad_ref`: Int = 4,
                         `ad_alt`: Int = 12,
                         `ad_total`: Int = 16,
                         `ad_ratio`: Double = 0.75,
                         `mother_ad_ref`: Int = 4,
                         `mother_calls`: Seq[Int] = Seq(1, 1),
                         `mother_gq`: Int = 18,
                         `mother_affected_status`: Boolean = true,
                         `mother_ad_alt`: Int = 12,
                         `mother_zygosity`: String = "HOM",
                         `mother_ad_total`: Int = 16,
                         `mother_info_qd`: Double = 4.12,
                         `mother_ad_ratio`: Double = 0.75,
                         `mother_dp`: Int = 16,
                         `father_affected_status`: Boolean = false,
                         `father_zygosity`: String = "WT",
                         `father_info_qd`: Double = 4.12,
                         `father_ad_alt`: Int = 12,
                         `father_calls`: Seq[Int] = Seq(0, 0),
                         `father_gq`: Int = 18,
                         `father_ad_ref`: Int = 4,
                         `father_dp`: Int = 16,
                         `father_ad_ratio`: Double = 0.75,
                         `father_ad_total`: Int = 16,
                         `parental_origin`: String = "mother",
                         `transmission`: String = null)

case class AGE_BIOSPECIMEN_COLLECTION(`value`: Long = 12,
                                      `unit`: String = "days")

case class PARTICIPANT(`participant_id`: String = "P1",
                       `study_id`: String = "STU0000001",
                       `release_id`: String = "5",
                       `fhir_id`: String = "P2",
                       `gender`: String = "female",
                       `deceasedBoolean`: Boolean = false,
                       `age_at_recruitment`: Int = 19328,
                       `ethnicity`: String = "European",
                       `submitter_participant_id`: String = "P2_internal",
                       `age_of_death`: Option[String] = None,
                       `is_affected`: Boolean = true,
                       `family_relationships`: Seq[FAMILY_RELATIONSHIPS] = Seq(FAMILY_RELATIONSHIPS()),
                       `is_a_proband`: Boolean = false,
                       `relationship_to_proband`: String = "is_proband",
                       `family_id`: String = "FAMO1",
                       `family_type`: String = "trio")

case class FAMILY_RELATIONSHIPS(`submitter_participant_id`: String = "P1",
                                `focus_participant_id`: String = "P1",
                                `relationship_to_proband`: String = "is_proband",
                                `family_id`: String = "FAMO1",
                                `family_type`: String = "trio",
                                `submitter_family_id`: String = "1",
                                `is_affected`: Option[String] = None)
