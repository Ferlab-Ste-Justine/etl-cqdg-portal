/**
 * Generated by [[bio.ferlab.datalake.testutils.ClassGenerator]]
 * on 2023-10-20T11:51:34.299391
 */
package bio.ferlab.etl.model


case class ENRICHED_VARIANTS(`chromosome`: String = "1",
                             `start`: Long = 14464,
                             `reference`: String = "A",
                             `alternate`: String = "T",
                             `hgvsg`: String = "chr1:g.14464A>T",
                             `end`: Long = 14465,
                             `variant_class`: String = "SNV",
                             `sources`: Seq[String] = Seq("WGS", "WXS"),
                             `dna_change`: String = "A>T",
                             `assembly_version`: String = "GRCh38",
                             `studies`: Seq[STUDY] = Seq(STUDY()),
                             `study_frequencies_wgs`: Seq[STUDY_FREQUENCIES_WGS] = Seq(STUDY_FREQUENCIES_WGS()),
                             `internal_frequencies_wgs`: INTERNAL_FREQUENCIES_WGS = INTERNAL_FREQUENCIES_WGS(),
                             `external_frequencies`: EXTERNAL_FREQUENCIES = EXTERNAL_FREQUENCIES(),
                             `rsnumber`: Option[String] = None,
                             `clinvar`: CLINVAR = CLINVAR(),
                             `genes`: Seq[GENES] = Seq(GENES()),
                             `cmc`: CMC = CMC(),
                             `gene_external_reference`: Seq[String] = Seq(),
                             `variant_external_reference`: Seq[String] = Seq(),
                             `locus`: String = "1-14464-A-T",
                             `hash`: String = "86004fa71d488d8ca621367a6a490c17c24ba24e")

case class THOUSAND_GENOMES(`ac`: Option[Long] = None,
                            `af`: Option[Double] = None,
                            `an`: Option[Long] = None)

case class ORPHANET(`disorder_id`: Option[Long] = None,
                    `panel`: Option[String] = None,
                    `inheritance`: Option[Seq[String]] = None)

case class INTERNAL_FREQUENCIES_WGS(`total`: TOTAL = TOTAL())

case class EXTERNAL_FREQUENCIES(`thousand_genomes`: THOUSAND_GENOMES = THOUSAND_GENOMES(),
                                `topmed_bravo`: TOPMED_BRAVO = TOPMED_BRAVO(),
                                `gnomad_genomes_2_1_1`: GNOMAD_GENOMES_2_1_1 = GNOMAD_GENOMES_2_1_1(),
                                `gnomad_exomes_2_1_1`: GNOMAD_EXOMES_2_1_1 = GNOMAD_EXOMES_2_1_1(),
                                `gnomad_genomes_3`: GNOMAD_GENOMES_3 = GNOMAD_GENOMES_3())

case class DDD(`disease_name`: Option[String] = None)

case class GNOMAD(`pli`: Option[Float] = None,
                  `loeuf`: Option[Float] = None)

case class GNOMAD_GENOMES_2_1_1(`ac`: Option[Long] = None,
                                `af`: Option[Double] = None,
                                `an`: Option[Long] = None,
                                `hom`: Option[Long] = None)

case class CLINVAR(`clinvar_id`: Option[String] = None,
                   `clin_sig`: Option[Seq[String]] = None,
                   `conditions`: Option[Seq[String]] = None,
                   `inheritance`: Option[Seq[String]] = None,
                   `interpretations`: Option[Seq[String]] = None)

case class GENES(`symbol`: Option[String] = None,
                 `entrez_gene_id`: Option[Int] = None,
                 `omim_gene_id`: Option[String] = None,
                 `hgnc`: Option[String] = None,
                 `ensembl_gene_id`: Option[String] = None,
                 `location`: Option[String] = None,
                 `name`: Option[String] = None,
                 `alias`: Option[Seq[String]] = None,
                 `biotype`: Option[String] = None,
                 `orphanet`: Seq[ORPHANET] = Seq(ORPHANET()),
                 `hpo`: Seq[HPO] = Seq(HPO()),
                 `omim`: Seq[OMIM] = Seq(OMIM()),
                 `ddd`: Seq[DDD] = Seq(DDD()),
                 `cosmic`: Seq[COSMIC] = Seq(COSMIC()),
                 `gnomad`: GNOMAD = GNOMAD(),
                 `spliceai`: SPLICEAI = SPLICEAI())

case class CMC(`mutation_url`: Option[String] = None,
               `shared_aa`: Option[Int] = None,
               `cosmic_id`: Option[String] = None,
               `sample_mutated`: Option[Int] = None,
               `sample_tested`: Option[Int] = None,
               `tier`: Option[String] = None,
               `sample_ratio`: Option[Double] = None)

case class GNOMAD_GENOMES_3(`ac`: Option[Long] = None,
                            `af`: Option[Double] = None,
                            `an`: Option[Long] = None,
                            `hom`: Option[Long] = None)

case class COSMIC(`tumour_types_germline`: Option[Seq[String]] = None)

case class OMIM(`name`: Option[String] = None,
                `omim_id`: Option[String] = None,
                `inheritance`: Option[Seq[String]] = None,
                `inheritance_code`: Option[Seq[String]] = None)

case class TOTAL(`ac`: Long = 10,
                 `pc`: Long = 10,
                 `hom`: Long = 0,
                 `pn`: Long = 10,
                 `an`: Long = 20,
                 `af`: Double = 0.5,
                 `pf`: Double = 1.0)

case class HPO(`hpo_term_id`: Option[String] = None,
               `hpo_term_name`: Option[String] = None,
               `hpo_term_label`: Option[String] = None)

case class STUDY(`study_id`: String = "S1",
                 `study_code`: String = "study_code1",
                 `zygosity`: Set[String] = Set("HET"))

case class STUDY_FREQUENCIES_WGS(`study_id`: String = "S1",
                                 `total`: TOTAL = TOTAL(),
                                 `study_code`: String = "study_code1",
                                 `transmission`: Set[String] = Set("autosomal_dominant"))
case class STUDY_FREQUENCIES_WGS_WITHOUT_TRANSMISSION(`study_id`: String = "S1",
                                                      `total`: TOTAL = TOTAL(),
                                                      `study_code`: String = "study_code1")

case class SPLICEAI(`ds`: Option[Double] = None,
                    `type`: Option[Seq[String]] = None)

case class TOPMED_BRAVO(`ac`: Option[Long] = None,
                        `af`: Option[Double] = None,
                        `an`: Option[Long] = None,
                        `hom`: Option[Long] = None,
                        `het`: Option[Long] = None)

case class GNOMAD_EXOMES_2_1_1(`ac`: Option[Long] = None,
                               `af`: Option[Double] = None,
                               `an`: Option[Long] = None,
                               `hom`: Option[Long] = None)
